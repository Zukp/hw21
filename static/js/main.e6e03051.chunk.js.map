{"version":3,"sources":["components/BasicForm.js","App.js","index.js"],"names":["BasicForm","props","useState","entredName","setEntredName","lastName","setLastName","entredEmail","setEntredEmail","isValid","setIsValid","isLast","setIsLast","isEmail","setIsEmail","nameIsInValid","IsInLast","IsInEmail","onSubmit","event","preventDefault","trim","includes","className","htmlFor","type","id","value","onChange","target","onBlur","App","ReactDOM","render","document","getElementById"],"mappings":"0LAqHeA,EAnHG,SAACC,GAChB,MAAmCC,mBAAS,IAA5C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAsCJ,mBAAS,IAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAA6BN,oBAAS,GAAtC,mBAAOO,EAAP,KAAeC,EAAf,KACA,EAA2BR,oBAAS,GAApC,mBAAOS,EAAP,KAAcC,EAAd,KACA,EAA6BV,oBAAS,GAAtC,mBAAOW,EAAP,KAAeC,EAAf,KA+DKC,EAAgBN,EAAW,uBAAyB,eACpDO,EAAWL,EAAS,uBAAyB,eAC7CM,EAAYJ,EAAU,uBAAyB,eAErD,OACE,uBAAMK,SAlBgB,SAACC,GAEvB,GADAA,EAAMC,iBACmB,KAAtBjB,EAAWkB,SAAkBd,EAAYe,SAAS,MAA6B,KAArBjB,EAASgB,OAIrE,OAHCT,GAAU,GACVF,GAAW,QACXI,GAAW,GAIbJ,GAAW,GACXE,GAAU,GACVE,GAAW,IAOX,UACE,sBAAKS,UAAU,gBAAf,UACE,sBAAKA,UAAWR,EAAhB,UACE,uBAAOS,QAAQ,OAAf,wBACA,uBACAC,KAAK,OACLC,GAAG,OACHC,MAAOxB,EACPyB,SA1EwB,SAACT,GAChCf,EAAce,EAAMU,OAAOF,OACF,KAAtBxB,EAAWkB,OAIfX,GAAW,GAHTA,GAAW,IAwELoB,OAlEiB,WACE,KAAtB3B,EAAWkB,OAIdX,GAAW,GAHTA,GAAW,SAoET,sBAAKa,UAAWP,EAAhB,UACE,uBAAOQ,QAAQ,OAAf,uBACA,uBACAC,KAAK,OACLC,GAAG,OACHC,MAAOtB,EACPuB,SApEkB,SAACT,GACzBb,EAAYa,EAAMU,OAAOF,OACD,KAArBtB,EAASgB,OAIZT,GAAU,GAHRA,GAAU,IAkENkB,OA5De,WACG,KAArBzB,EAASgB,OAIZT,GAAU,GAHRA,GAAU,YA8DV,sBAAKW,UAAWN,EAAhB,UACE,uBAAOO,QAAQ,OAAf,4BACA,uBACAC,KAAK,QACLC,GAAG,OACHC,MAAOpB,EACPqB,SA/D2B,SAACT,GAChCX,EAAeW,EAAMU,OAAOF,OACxBpB,EAAYe,SAAS,KAIvBR,GAAW,GAHXA,GAAW,IA6DTgB,OAxDoB,WACpBvB,EAAYe,SAAS,KAIzBR,GAAW,GAHXA,GAAW,SAyDT,qBAAKS,UAAU,eAAf,SACE,kDCnGOQ,MATf,WACE,OACE,qBAAKR,UAAU,MAAf,SACC,cAAC,EAAD,OCDLS,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.e6e03051.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nconst BasicForm = (props) => {\n   const [entredName,setEntredName] = useState('')\n   const [lastName, setLastName] = useState('')\n   const [entredEmail, setEntredEmail] = useState('')\n   const [isValid,setIsValid] = useState(false)\n   const [isLast,setIsLast] = useState(false)\n   const [isEmail,setIsEmail] = useState(false)\n \n  const entredNameChangeHandler = (event) =>{\n   setEntredName(event.target.value)\n   if(entredName.trim() === ''){\n    setIsValid(true)\n    return\n  }\n  setIsValid(false)\n  } \n\n  const entredNameOnBlur = () => {\n    if(entredName.trim() === ''){\n      setIsValid(true)\n      return\n    }\n    setIsValid(false)\n  }\n\n  const lastChangeHandler = (event) => {\n    setLastName(event.target.value)\n    if(lastName.trim()  === ''){  \n      setIsLast(true)\n      return\n    }\n    setIsLast(false)\n  }\n\n  const lastNameOnBlur = () => {\n    if(lastName.trim()  === ''){  \n      setIsLast(true)\n      return\n    }\n    setIsLast(false)\n  }\n  const entredEamilChangeHandler = (event) => {\n    setEntredEmail(event.target.value)\n    if(!entredEmail.includes('@')){\n      setIsEmail(true)\n      return\n      }\n      setIsEmail(false)\n  }\n  const entredEmailOnBlur = () => {\n    if(!entredEmail.includes('@')){\n    setIsEmail(true)\n    return\n    }\n    setIsEmail(false)\n  }\n    const submitHandler = (event) =>{\n    event.preventDefault()\n    if(entredName.trim() === '' && !entredEmail.includes('@') && lastName.trim()  === ''){\n      setIsLast(true)\n      setIsValid(true)\n      setIsEmail(true)\n     return\n    }\n  \n    setIsValid(false)\n    setIsLast(false)\n    setIsEmail(false)\n  }\n  const nameIsInValid = isValid  ? 'form-control invalid' : 'form-control';\n  const IsInLast = isLast ? 'form-control invalid' : 'form-control';\n  const IsInEmail = isEmail ? 'form-control invalid' : 'form-control';\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className='control-group'>\n        <div className={nameIsInValid}>\n          <label htmlFor='name'>First Name</label>\n          <input \n          type='text'\n          id='name'\n          value={entredName}\n          onChange={entredNameChangeHandler}\n          onBlur={entredNameOnBlur}\n           />\n          \n        </div>\n        <div className={IsInLast}>\n          <label htmlFor='name'>Last Name</label>\n          <input \n          type='text'\n          id='name'\n          value={lastName}\n          onChange={lastChangeHandler}\n          onBlur={lastNameOnBlur}\n           />\n        </div>\n      </div> \n      <div className={IsInEmail}>\n        <label htmlFor='name'>E-Mail Address</label>\n        <input \n        type='email'\n        id='name'\n        value={entredEmail}\n        onChange={entredEamilChangeHandler}\n        onBlur={entredEmailOnBlur}\n        />\n      </div>\n      <div className='form-actions'>\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n","import BasicForm from './components/BasicForm';\n// import SimpleInput from './components/SimpleInput';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n     <BasicForm />\n     {/* <SimpleInput /> */}\n    </div>\n  );\n}\n\nexport default App;\n ","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}